"code":'<math>
          <mstyle displaystyle="true" data-semantic-type="relseq" data-semantic-role="equality" data-semantic-id="21" data-semantic-children="18,20" data-semantic-content="9" data-semantic-speech="StartFraction d Over d x EndFraction x Superscript n Baseline equals n x Superscript n minus 1">
            <mrow data-semantic-type="infixop" data-semantic-role="implicit" data-semantic-annotation="clearspeak:unit" data-semantic-id="18" data-semantic-children="5,8" data-semantic-content="17" data-semantic-parent="21">
              <mfrac data-semantic-type="fraction" data-semantic-role="division" data-semantic-id="5" data-semantic-children="0,4" data-semantic-parent="18">
                <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="0" data-semantic-parent="5">d</mi>
                <mrow data-semantic-type="infixop" data-semantic-role="implicit" data-semantic-annotation="clearspeak:simple;clearspeak:unit" data-semantic-id="4" data-semantic-children="1,2" data-semantic-content="3" data-semantic-parent="5">
                  <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="1" data-semantic-parent="4">d</mi>
                  <mo data-semantic-type="operator" data-semantic-role="multiplication" data-semantic-id="3" data-semantic-parent="4" data-semantic-added="true" data-semantic-operator="infixop,&#x2062;">&#x2062;</mo>
                  <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="2" data-semantic-parent="4">x</mi>
                </mrow>
              </mfrac>
              <mo data-semantic-type="operator" data-semantic-role="multiplication" data-semantic-id="17" data-semantic-parent="18" data-semantic-added="true" data-semantic-operator="infixop,&#x2062;">&#x2062;</mo>
              <msup data-semantic-type="superscript" data-semantic-role="latinletter" data-semantic-id="8" data-semantic-children="6,7" data-semantic-parent="18">
                <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="6" data-semantic-parent="8">x</mi>
                <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="7" data-semantic-parent="8">n</mi>
              </msup>
            </mrow>
            <mo data-semantic-type="relation" data-semantic-role="equality" data-semantic-id="9" data-semantic-parent="21" data-semantic-operator="relseq,=">=</mo>
            <mrow data-semantic-type="infixop" data-semantic-role="implicit" data-semantic-annotation="clearspeak:unit" data-semantic-id="20" data-semantic-children="10,16" data-semantic-content="19" data-semantic-parent="21">
              <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="10" data-semantic-parent="20">n</mi>
              <mo data-semantic-type="operator" data-semantic-role="multiplication" data-semantic-id="19" data-semantic-parent="20" data-semantic-added="true" data-semantic-operator="infixop,&#x2062;">&#x2062;</mo>
              <msup data-semantic-type="superscript" data-semantic-role="latinletter" data-semantic-id="16" data-semantic-children="11,15" data-semantic-parent="20">
                <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="11" data-semantic-parent="16">x</mi>
                <mrow data-semantic-type="infixop" data-semantic-role="subtraction" data-semantic-id="15" data-semantic-children="12,14" data-semantic-content="13" data-semantic-parent="16">
                  <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="12" data-semantic-parent="15">n</mi>
                  <mo data-semantic-type="operator" data-semantic-role="subtraction" data-semantic-id="13" data-semantic-parent="15" data-semantic-operator="infixop,-">-</mo>
                  <mn data-semantic-type="number" data-semantic-role="integer" data-semantic-font="normal" data-semantic-annotation="clearspeak:simple" data-semantic-id="14" data-semantic-parent="15">1</mn>
                </mrow>
              </msup>
            </mrow>
          </mstyle>
        </math>`
        },
        {
            
            "raw":"d/dxa^x = a^x ln(a)",
            "math_ml":`<math xmlns="http://www.w3.org/1998/Math/MathML">
            <mstyle displaystyle="true" data-semantic-type="relseq" data-semantic-role="equality" data-semantic-id="24" data-semantic-children="21,23" data-semantic-content="9" data-semantic-speech="StartFraction d Over d x EndFraction a Superscript x Baseline equals a Superscript x Baseline ln left parenthesis a right parenthesis">
              <mrow data-semantic-type="infixop" data-semantic-role="implicit" data-semantic-annotation="clearspeak:unit" data-semantic-id="21" data-semantic-children="5,8" data-semantic-content="20" data-semantic-parent="24">
                <mfrac data-semantic-type="fraction" data-semantic-role="division" data-semantic-id="5" data-semantic-children="0,4" data-semantic-parent="21">
                  <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="0" data-semantic-parent="5">d</mi>
                  <mrow data-semantic-type="infixop" data-semantic-role="implicit" data-semantic-annotation="clearspeak:simple;clearspeak:unit" data-semantic-id="4" data-semantic-children="1,2" data-semantic-content="3" data-semantic-parent="5">
                    <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="1" data-semantic-parent="4">d</mi>
                    <mo data-semantic-type="operator" data-semantic-role="multiplication" data-semantic-id="3" data-semantic-parent="4" data-semantic-added="true" data-semantic-operator="infixop,&#x2062;">&#x2062;</mo>
                    <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="2" data-semantic-parent="4">x</mi>
                  </mrow>
                </mfrac>
                <mo data-semantic-type="operator" data-semantic-role="multiplication" data-semantic-id="20" data-semantic-parent="21" data-semantic-added="true" data-semantic-operator="infixop,&#x2062;">&#x2062;</mo>
                <msup data-semantic-type="superscript" data-semantic-role="latinletter" data-semantic-id="8" data-semantic-children="6,7" data-semantic-parent="21">
                  <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="6" data-semantic-parent="8">a</mi>
                  <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="7" data-semantic-parent="8">x</mi>
                </msup>
              </mrow>
              <mo data-semantic-type="relation" data-semantic-role="equality" data-semantic-id="9" data-semantic-parent="24" data-semantic-operator="relseq,=">=</mo>
              <mrow data-semantic-type="infixop" data-semantic-role="implicit" data-semantic-annotation="clearspeak:unit" data-semantic-id="23" data-semantic-children="12,19" data-semantic-content="22" data-semantic-parent="24">
                <msup data-semantic-type="superscript" data-semantic-role="latinletter" data-semantic-id="12" data-semantic-children="10,11" data-semantic-parent="23">
                  <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="10" data-semantic-parent="12">a</mi>
                  <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="11" data-semantic-parent="12">x</mi>
                </msup>
                <mo data-semantic-type="operator" data-semantic-role="multiplication" data-semantic-id="22" data-semantic-parent="23" data-semantic-added="true" data-semantic-operator="infixop,&#x2062;">&#x2062;</mo>
                <mrow data-semantic-type="appl" data-semantic-role="prefix function" data-semantic-annotation="clearspeak:simple" data-semantic-id="19" data-semantic-children="13,17" data-semantic-content="18,13" data-semantic-parent="23">
                  <mi data-semantic-type="function" data-semantic-role="prefix function" data-semantic-font="normal" data-semantic-id="13" data-semantic-parent="19" data-semantic-operator="appl">ln</mi>
                  <mo data-semantic-type="punctuation" data-semantic-role="application" data-semantic-id="18" data-semantic-parent="19" data-semantic-added="true" data-semantic-operator="appl">&#x2061;</mo>
                  <mrow data-semantic-type="fenced" data-semantic-role="leftright" data-semantic-id="17" data-semantic-children="15" data-semantic-content="14,16" data-semantic-parent="19">
                    <mo data-semantic-type="fence" data-semantic-role="open" data-semantic-id="14" data-semantic-parent="17" data-semantic-operator="fenced">(</mo>
                    <mi data-semantic-type="identifier" data-semantic-role="latinletter" data-semantic-font="italic" data-semantic-annotation="clearspeak:simple" data-semantic-id="15" data-semantic-parent="17">a</mi>
                    <mo data-semantic-type="fence" data-semantic-role="close" data-semantic-id="16" data-semantic-parent="17" data-semantic-operator="fenced">)</mo>
                  </mrow>
                </mrow>
              </mrow>
            </mstyle>
          </math>'
